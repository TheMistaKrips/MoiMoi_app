import React from 'react';
import { View, Text, StyleSheet, TouchableOpacity, ScrollView, Alert } from 'react-native';
import { useNavigation } from '@react-navigation/native';
import { Ionicons } from '@expo/vector-icons';

export default function PermissionsScreen() {
    const navigation = useNavigation();

    const handleEnablePermissions = async () => {
        try {
            // –§–µ–π–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π - –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            Alert.alert(
                '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã!',
                '–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ—Ç MoiMoi (–≤ –±—É–¥—É—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö)',
                [
                    {
                        text: '–û—Ç–ª–∏—á–Ω–æ!',
                        onPress: () => navigation.navigate('Habits')
                    }
                ]
            );
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞:', error);
            Alert.alert('–û—à–∏–±–∫–∞', '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫');
            navigation.navigate('Habits');
        }
    };

    const handleSkip = () => {
        navigation.navigate('Habits');
    };

    return (
        <View style={styles.container}>
            <Text style={styles.title}>–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è üîî</Text>

            <ScrollView style={styles.permissionsList}>
                <View style={styles.permissionItem}>
                    <Ionicons name="notifications-outline" size={32} color="#bb69f2" />
                    <View style={styles.permissionText}>
                        <Text style={styles.permissionTitle}>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Text>
                        <Text style={styles.permissionDescription}>
                            –ß—Ç–æ–±—ã –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –≤–∞–º –æ –≤–∞—à–∏—Ö –∑–∞–¥–∞—á–∞—Ö –∏ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –≤–∞—à–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
                        </Text>
                    </View>
                </View>

                <View style={styles.permissionItem}>
                    <Ionicons name="time-outline" size={32} color="#bb69f2" />
                    <View style={styles.permissionText}>
                        <Text style={styles.permissionTitle}>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è</Text>
                        <Text style={styles.permissionDescription}>
                            –ß—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤ –∫—É—Ä—Å–µ –≤–∞—à–∏—Ö –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫
                        </Text>
                    </View>
                </View>

                <View style={styles.noteBox}>
                    <Ionicons name="information-circle-outline" size={20} color="#69a4fe" />
                    <Text style={styles.noteText}>
                        –í —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ. –ü–æ–ª–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö.
                    </Text>
                </View>
            </ScrollView>

            <View style={styles.buttonContainer}>
                <TouchableOpacity
                    style={styles.primaryButton}
                    onPress={handleEnablePermissions}
                >
                    <Text style={styles.primaryButtonText}>–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Text>
                </TouchableOpacity>

                <TouchableOpacity
                    style={styles.secondaryButton}
                    onPress={handleSkip}
                >
                    <Text style={styles.secondaryButtonText}>–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å</Text>
                </TouchableOpacity>
            </View>
        </View>
    );
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
        padding: 20,
        backgroundColor: '#ffffff',
    },
    title: {
        fontSize: 28,
        fontWeight: 'bold',
        marginBottom: 30,
        color: '#333',
        textAlign: 'center',
        marginTop: 20,
    },
    permissionsList: {
        flex: 1,
    },
    permissionItem: {
        flexDirection: 'row',
        alignItems: 'flex-start',
        backgroundColor: '#f8f9fa',
        padding: 20,
        borderRadius: 12,
        marginBottom: 15,
        borderLeftWidth: 4,
        borderLeftColor: '#bb69f2',
    },
    permissionText: {
        flex: 1,
        marginLeft: 15,
    },
    permissionTitle: {
        fontSize: 18,
        fontWeight: '600',
        marginBottom: 5,
        color: '#333',
    },
    permissionDescription: {
        fontSize: 14,
        color: '#666',
        lineHeight: 20,
    },
    noteBox: {
        flexDirection: 'row',
        alignItems: 'flex-start',
        backgroundColor: '#e3f2fd',
        padding: 15,
        borderRadius: 12,
        marginTop: 10,
        borderLeftWidth: 4,
        borderLeftColor: '#69a4fe',
    },
    noteText: {
        flex: 1,
        fontSize: 14,
        color: '#1976d2',
        lineHeight: 20,
        marginLeft: 10,
    },
    buttonContainer: {
        marginTop: 20,
    },
    primaryButton: {
        backgroundColor: '#69a4fe',
        paddingVertical: 15,
        borderRadius: 25,
        marginBottom: 15,
        alignItems: 'center',
    },
    primaryButtonText: {
        color: 'white',
        fontSize: 18,
        fontWeight: '600',
    },
    secondaryButton: {
        padding: 15,
        alignItems: 'center',
    },
    secondaryButtonText: {
        color: '#666',
        fontSize: 16,
    },
});